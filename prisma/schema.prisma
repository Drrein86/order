// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// עסקים
model Business {
  id          String   @id @default(cuid())
  name        String
  email       String
  phone       String?
  address     String?
  description String?
  logo        String? // URL ללוגו
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // קשרים
  categories       Category[]
  orders           Order[]
  businessUsers    BusinessUser[]
  businessSettings BusinessSettings?
  customers        Customer[]
  activityLogs     ActivityLog[]
  products         Product[]

  @@map("businesses")
}

// משתמשי עסק (Admin Panel)
model BusinessUser {
  id         String           @id @default(cuid())
  businessId String
  email      String           @unique
  password   String
  name       String
  role       BusinessUserRole @default(STAFF)
  isActive   Boolean          @default(true)
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt

  // קשרים
  business     Business      @relation(fields: [businessId], references: [id], onDelete: Cascade)
  activityLogs ActivityLog[]

  @@map("business_users")
}

enum BusinessUserRole {
  OWNER
  MANAGER
  STAFF
}

// הגדרות עסק
model BusinessSettings {
  id               String   @id @default(cuid())
  businessId       String   @unique
  backgroundVideo  String? // URL לוידאו רקע
  primaryColor     String   @default("#3B82F6")
  secondaryColor   String   @default("#F59E0B")
  accentColor      String   @default("#10B981")
  textColor        String   @default("#1F2937")
  whatsappNumber   String?
  emailEnabled     Boolean  @default(true)
  whatsappEnabled  Boolean  @default(true)
  printingEnabled  Boolean  @default(true)
  isOrderingOpen   Boolean  @default(true) // מצב שקט בלילה
  orderStartNumber Int      @default(1) // מספור הזמנות
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // קשרים
  business Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

  @@map("business_settings")
}

// קטגוריות
model Category {
  id          String   @id @default(cuid())
  businessId  String
  name        String
  description String?
  image       String? // URL לתמונה
  order       Int      @default(0) // סדר תצוגה
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // קשרים
  business Business  @relation(fields: [businessId], references: [id], onDelete: Cascade)
  products Product[]

  @@map("categories")
}

// מוצרים
model Product {
  id          String   @id @default(cuid())
  categoryId  String
  businessId  String? // עדכון הדרגתי לנתונים קיימים
  name        String
  description String?
  basePrice   Float? // עדכון הדרגתי לנתונים קיימים 
  price       Float? // השדה הישן לתאימות לאחור
  image       String? // URL לתמונה
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0) // סדר תצוגה
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // קשרים
  category       Category        @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  business       Business?       @relation(fields: [businessId], references: [id], onDelete: Cascade)
  productOptions ProductOption[]
  orderItems     OrderItem[]

  @@map("products")
}

// תוספות ואפשרויות למוצרים
model ProductOption {
  id           String            @id @default(cuid())
  name         String // "גודל פיצה", "תוספות", "רכיבי המבורגר"
  type         ProductOptionType @default(SINGLE_CHOICE)
  isRequired   Boolean           @default(false)
  sortOrder    Int               @default(0)
  isActive     Boolean           @default(true)
  // תמיכה באפשרויות מתקדמות
  isHalfOption Boolean           @default(false) // עבור פיצה חצי/שלמה
  parentId     String? // עבור תת-אפשרויות
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  productId    String

  // קשרים
  product             Product              @relation(fields: [productId], references: [id], onDelete: Cascade)
  parent              ProductOption?       @relation("OptionHierarchy", fields: [parentId], references: [id])
  children            ProductOption[]      @relation("OptionHierarchy")
  productOptionValues ProductOptionValue[]
  orderItemOptions    OrderItemOption[]

  @@map("product_options")
}

enum ProductOptionType {
  SINGLE_CHOICE // בחירה יחידה (גודל פיצה)
  MULTIPLE_CHOICE // בחירה מרובה (תוספות)
  TEXT_INPUT // הזנה חופשית (הערות)
  QUANTITY // כמות (מספר ציפס)
  HALF_AND_HALF // חצי וחצי עבור פיצה
}

// ערכי תוספות
model ProductOptionValue {
  id              String   @id @default(cuid())
  name            String // "קטנה", "גדולה", "חצי", "שלמה", "קטשופ", "מיונז"
  additionalPrice Float    @default(0)
  isDefault       Boolean  @default(false)
  sortOrder       Int      @default(0)
  isActive        Boolean  @default(true)
  // תמיכה במיקום על פיצה
  halfPosition    String? // "LEFT", "RIGHT", "FULL"
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  productOptionId String

  // קשרים
  productOption    ProductOption     @relation(fields: [productOptionId], references: [id], onDelete: Cascade)
  orderItemOptions OrderItemOption[]

  @@map("product_option_values")
}

// לקוחות
model Customer {
  id        String   @id @default(cuid())
  name      String
  phone     String
  email     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // קשרים
  orders     Order[]
  Business   Business? @relation(fields: [businessId], references: [id])
  businessId String?

  @@unique([phone])
  @@map("customers")
}

// הזמנות
model Order {
  id          String      @id @default(cuid())
  businessId  String
  customerId  String
  orderNumber Int // מספר הזמנה רצוף לפי עסק
  orderType   OrderType
  status      OrderStatus @default(PENDING)
  totalAmount Float
  notes       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // קשרים
  business   Business    @relation(fields: [businessId], references: [id], onDelete: Cascade)
  customer   Customer    @relation(fields: [customerId], references: [id])
  orderItems OrderItem[]

  @@unique([businessId, orderNumber])
  @@map("orders")
}

enum OrderType {
  DINE_IN // שבת במקום
  TAKEAWAY // טייקאווי
}

enum OrderStatus {
  PENDING // ממתינה
  CONFIRMED // אושרה
  PREPARING // בהכנה
  READY // מוכנה
  DELIVERED // נמסרה
  CANCELLED // בוטלה
}

// פריטים בהזמנה
model OrderItem {
  id         String   @id @default(cuid())
  orderId    String
  productId  String
  quantity   Int
  unitPrice  Float
  totalPrice Float
  notes      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // קשרים
  order            Order             @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product          Product           @relation(fields: [productId], references: [id])
  orderItemOptions OrderItemOption[]

  @@map("order_items")
}

// תוספות שנבחרו לפריטים בהזמנה
model OrderItemOption {
  id                   String   @id @default(cuid())
  textValue            String? // עבור הזנה חופשית
  additionalPrice      Float    @default(0)
  // תמיכה במיקום על פיצה
  halfPosition         String? // "LEFT", "RIGHT", "FULL"
  quantity             Int      @default(1) // כמות התוספת (עבור המבורגר וכד')
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  orderItemId          String
  productOptionId      String
  productOptionValueId String?

  // קשרים
  orderItem          OrderItem           @relation(fields: [orderItemId], references: [id], onDelete: Cascade)
  productOption      ProductOption       @relation(fields: [productOptionId], references: [id])
  productOptionValue ProductOptionValue? @relation(fields: [productOptionValueId], references: [id])

  @@map("order_item_options")
}

// לוג פעולות (אופציונלי)
model ActivityLog {
  id             String   @id @default(cuid())
  action         String
  entityType     String
  entityId       String
  oldData        Json?
  newData        Json?
  createdAt      DateTime @default(now())
  businessUserId String
  businessId     String

  // קשרים
  businessUser BusinessUser @relation(fields: [businessUserId], references: [id])
  business     Business     @relation(fields: [businessId], references: [id], onDelete: Cascade)

  @@map("activity_logs")
}
